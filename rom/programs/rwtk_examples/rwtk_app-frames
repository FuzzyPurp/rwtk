-----------------------------------------------------------------------------
-- Redworks Toolkit Example Application
-- Author: MewK
--
-- This program is released under the MIT License (MIT).
-----------------------------------------------------------------------------

local myApplication
local myConfig
local myFrame
local mySaveAsDialog

-- Create Application
myApplication = rwtk_app.create({
	-- onStart
	onStart = function(self)
		-- Load config
		myConfig = rwtk_app_config.load('myConfig.conf', {
			counter = 1,
			subCounter = 1
		})
	end,
	
	-- onStop
	onStop = function(self)
		-- Save config
		rwtk_app_config.save('myConfig.conf', myConfig)
	end,
	
	-- onKey
	onKey = function(self, keyCode)
		-- Break
		if keyCode == 197 then
			self:stop()
		end
	end
})

-- Create Main Frame
myFrame = rwtk_app_frame.create({
	border = false,
	visible = true,
	menu = {
		align = 'bottom',
		items = {
			{
				text = 'File',
				items = {
					{ 
						text = 'Clear',
						onAction = function(self)
							myConfig.counter = 0
							myConfig.subCounter = 0
						end
					}, { 
						text = 'Surprise',
						keyCode = 31, -- S
						onAction = function(self)
							self.application:getFrame('mySaveAsDialog').visible = true
							self.application:focusFrame('mySaveAsDialog')
						end
					}
				}
			}, { 
				text = 'Exit',
				keyCode = 18, -- E
				onAction = function(self)
					self.application:stop()
				end
			}
		}
	},

	onDraw = function(self, innerX, innerY, innerWidth, innerHeight)
		for i = 1, myConfig.counter do
			term.write('O')
			if i % innerWidth == 0 then
				term.setCursorPos(innerX, innerY + math.floor(i / innerWidth))
			end
		end
	end,
	
	onKey = function(self, keyCode)
		myConfig.counter = myConfig.counter + 1
	end
})

-- Create Save As Dialog
mySaveAsDialog = rwtk_app_frame.create({
	visible = false,
	width = 32, 
	height = 14,
	title = 'Surprise',
	menu = {
		items = {
			{
				text = 'Foo',
				items = {
					{ 
						text = 'Close',
						onAction = function(self)
							self.visible = false
							self.application:focusFrame('myFrame')
						end
					}
				}
			}
		}
	},

	onDraw = function(self, innerX, innerY, innerWidth, innerHeight)
		for i = 1, myConfig.subCounter do
			term.write('X')
			if i % innerWidth == 0 then
				term.setCursorPos(innerX, innerY + math.floor(i / innerWidth))
			end
		end
	end,
	
	onKey = function(self, keyCode)
		myConfig.subCounter = myConfig.subCounter + 1
	end
})

-- Prepare application
myApplication:addFrame('myFrame', myFrame)
myApplication:addFrame('mySaveAsDialog', mySaveAsDialog)
myApplication:focusFrame('myFrame');
		
-- Start application
myApplication:start()