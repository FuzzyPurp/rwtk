-----------------------------------------------------------------------------
-- Redworks Toolkit
-- Author: MewK
--
-- This program is released under the MIT License (MIT).
-----------------------------------------------------------------------------

-- Using:
os.loadAPI('/rom/apis/rwtk_libs/rwtk_app')
os.loadAPI('/rom/apis/rwtk_libs/rwtk_draw')
os.loadAPI('/rom/apis/rwtk_libs/rwtk_string')

-- Button component class
button = rwtk_core.class(rwtk_app.component, function(_self, properties)
	if not properties.width and properties.text then
		properties.width = # properties.text + 2
		if properties.borders then
			properties.width = properties.width + 2
		end
	end
	
	-- Default properties
	_self.focusable = true
	_self.text = nil
	
	-- Call base constructor
	rwtk_app.component.init(_self, properties)
end)

-- Base functions

function button:onDrawInternal(outerX, outerY, outerWidth, outerHeight)
	-- Draw base
	self._base.onDrawInternal(self, outerX, outerY, outerWidth, outerHeight)
	
	-- Draw text
	if self.text then
		local _text = rwtk_string.ellipsis(self.text, self.width - 2 - 2 * self.padding)
		if self.focused then
			_text = '>'.._text..'<'
		else
			_text = ' '.._text..' '
		end
		
		local innerX, innerY, innerWidth, innerHeight = self:innerDimensions(outerX, outerY, outerWidth, outerHeight)
		local textX, textY = rwtk_draw.centeredCoordinates(# _text, 1, self.width, self.height)
		term.setCursorPos(innerX + textX - 1, innerY + textY - 1)
		term.write(_text)
	end
end

-- Factory function

function create(properties)
	return button(properties);
end