-----------------------------------------------------------------------------
-- Redworks Toolkit
-- Author: MewK
--
-- This program is released under the MIT License (MIT).
-----------------------------------------------------------------------------

-- Using:
os.loadAPI('/rom/apis/rwtk_libs/rwtk_core')
os.loadAPI('/rom/apis/rwtk_libs/rwtk_string')

function drawText(text, x, y, w, h, scrollX, scrollY, wordWrap, rx, ry, i)
	local returnPosition = false
	local returnIndex = false
	
	if (rx and ry) then
		returnIndex = true
	elseif i then
		returnPosition = true
	end

	local _x = 1 - scrollX
	local _y = 1 - scrollY
	local _i = 1
	
	local function linebreak()
		_x = 1 - scrollX
		_y = _y + 1
		_i = _i + 1
		if returnPosition and _i == i then
			return _x, _y
		end
		return nil
	end
	
	local function printCharacter(character)
		if _x <= w and _x > 0 and _y <= h and _y > 0 and not returnPosition and not returnIndex then
			term.setCursorPos(x + _x - 1, y + _y - 1)
			term.write(character)
		end
		_x = _x + 1
		_i = _i + 1
		if returnPosition and _i == i then
			return _x, _y
		elseif returnIndex and _x == rx and _y == ry then
			return _i
		end
		return nil
	end
	
	-- Print lines
	local lines = rwtk_string.split(text, '\n')
	for index, line in ipairs(lines) do
		-- Print words
		local words = rwtk_string.split(line, ' ')
		local _t1, _t2
		for index, word in ipairs(words) do
			-- WordWrap
			if wordWrap and _x + # word > w then
				_t1, _t2 = linebreak()
				if _t1 then
					return _t1, _t2
				end
			end
			
			-- Print letters
			for letterIndex = 1, # word do
				_t1, _t2 = printCharacter(word:sub(letterIndex, letterIndex))
				if _t1 then
					return _t1, _t2
				end
			end
			
			-- Print space
			_t1, _t2 = printCharacter(' ')
			if _t1 then
				return _t1, _t2
			end
		end
		-- End of line
		_t1, _t2 = linebreak()
		if _t1 then
			return _t1, _t2
		end
	end
end

-- String Index <=> Relative Position

function relativePositionToIndex(rx, ry, text, x, y, w, h, scrollX, scrollY, wordWrap)
	return drawText(text, x, y, w, h, scrollX, scrollY, wordWrap, rx, ry, nil)
end

function indexToRelativePosition(i, text, x, y, w, h, scrollX, scrollY, wordWrap)
	return drawText(text, x, y, w, h, scrollX, scrollY, wordWrap, nil, nil, i)
end

-- String Index <=> Absolute Position

function absolutePositionToIndex(ax, ay, text, x, y, w, h, scrollX, scrollY, wordWrap)
	return relativePositionToIndex(ax - x, ay - y, text, x, y, w, h, scrollX, scrollY, wordWrap)
end

function indexToAbsolutePosition(i, text, x, y, w, h, scrollX, scrollY, wordWrap)
	local _x, _y = indexToRelativePosition(i, text, x, y, w, h, scrollX, scrollY, wordWrap)
	if _x and _y then
		return _x + x, _y + y
	end
	return false, false
end