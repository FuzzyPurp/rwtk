-----------------------------------------------------------------------------
-- Redworks Toolkit
-- Author: MewK
--
-- This program is released under the MIT License (MIT).
-----------------------------------------------------------------------------

-- Using:
os.loadAPI('/rom/apis/rwtk_libs/rwtk_app_layer')

-- Abstract component class
component = rwtk_core.class(function(_self, properties)
	_self.border = true
	--_self.focusable = false
	_self.focused = false
	_self.height = --
	_self.padding = 1
	_self.visible = true
	_self.width = --
	_self.x = 1
	_self.y = 1
	
	-- Properties
	if properties then
		-- Copy properties
		for key, value in pairs(properties) do
			_self[key] = value
		end
	
		-- Property logic
		if not _self.x or not _self.y then
			_self.x, _self.y = 1, 1
		end
		
		if not _self.border then
			_self.padding = 0
		end
	end
		
	-- Component key event handler
	if _self.onKey then
		_self.__onKey = _self.onKey
	end
	
	_self.onKey = function(self, keyCode)
		-- Up
		if keyCode == 200 then

		-- Down
		elseif keyCode == 208 then

		-- Left
		elseif keyCode == 203 then

		-- Right
		elseif keyCode == 205 then

		-- Enter
		elseif keyCode == 28 then

		end

		-- Call event handler
		if self.__onKey then
			self.__onKey(self, keyCode)
		end
	end
end)

-- General functions

function component:draw(innerX, innerY, innerWidth, innerHeight)
	-- Calculate inner dimensions
	local _innerX, _innerY, _innerWidth, _innerHeight = self:innerDimensions(innerX, innerY, innerWidth, innerHeight)
	
	-- Call event handler
	if self.onDraw then	
		term.setCursorPos(_innerX, _innerY)
		self.onDraw(self, _innerX, _innerY, _innerWidth, _innerHeight)
	end
end

function component:innerDimensions(innerX, innerY, innerWidth, innerHeight)
	innerX = innerX + self.x + self.padding - 1
	innerY = innerY + self.y + self.padding - 1
	innerWidth = self.width - 2 * self.padding
	innerHeight = self.height - 2 * self.padding
	return innerX, innerY, innerWidth, innerHeight
end