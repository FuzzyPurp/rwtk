-----------------------------------------------------------------------------
-- Redworks Toolkit
-- Author: MewK
--
-- This program is released under the MIT License (MIT).
-----------------------------------------------------------------------------

-- Using:
os.loadAPI('/rom/apis/rwtk_libs/rwtk_app')
os.loadAPI('/rom/apis/rwtk_libs/rwtk_draw')
os.loadAPI('/rom/apis/rwtk_libs/rwtk_string')

-- TextBox component class
textBox = rwtk_core.class(rwtk_app.component, function(_self, properties)
	-- Default properties
	_self.cursorX = 1
	_self.cursorY = 1
	_self.focusable = true
	_self.isPassword = false
	_self.multiLine = false
	_self.scrollX = 0
	_self.scrollY = 0
	_self.text = nil
	_self.wordWrap = false
	
	-- Call base constructor
	rwtk_app.component.init(_self, properties)
end)

-- Base functions

function textBox:innerDimensions(outerX, outerY, outerWidth, outerHeight)
	outerX, outerY, outerWidth, outerHeight = self._base.innerDimensions(self, outerX, outerY, outerWidth, outerHeight)
	
	-- scrollbars
	
	return outerX, outerY, outerWidth, outerHeight
end

function textBox:onDrawInternal(outerX, outerY, outerWidth, outerHeight)
	-- Draw base
	self._base.onDrawInternal(self, outerX, outerY, outerWidth, outerHeight)
	
	local innerX, innerY, innerWidth, innerHeight = self:innerDimensions(outerX, outerY, outerWidth, outerHeight)
	
	-- Draw text
	if self.text then
		rwtk_draw_text.drawText(self.text, innerX, innerY, innerWidth, innerHeight, self.scrollX, self.scrollY, self.wordWrap)
	end
	
	-- Set Cursor
	if self.focused then
		term.setCursorBlink(true)
		return false, innerX + self.cursorX - 1, innerY + self.cursorY - 1
	end
end

function textBox:onKeyInternal(keyCode)
	-- do something
end

-- Factory function

function create(properties)
	return textBox(properties);
end